// ---------- Client & DB ----------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ---------- Models ----------
model Category {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique
  brands    Brand[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id         Int      @id @default(autoincrement())
  name       String
  poster     String? // optional poster path/url (null = no poster)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  flavors    Flavor[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

model Flavor {
  id            Int     @id @default(autoincrement())
  name          String
  code          String
  stock         Int     @default(0)
  costPrice     Float   @default(0) // Cost in PHP ₱
  sellingPrice  Float   @default(0) // Selling price in PHP ₱

  brandId Int
  brand   Brand @relation(fields: [brandId], references: [id], onDelete: Cascade)

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]

  @@index([brandId])
}

model Order {
  id        Int         @id @default(autoincrement())
  customer  String
  status    String      @default("PREPARING") // simple text status to avoid enum headaches
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id       Int @id @default(autoincrement())
  orderId  Int
  flavorId Int
  quantity Int

  order  Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  flavor Flavor @relation(fields: [flavorId], references: [id])

  @@index([orderId])
  @@index([flavorId])
}